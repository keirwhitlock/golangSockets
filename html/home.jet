<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.css" integrity="sha512-7DgarsuahzxiOonlZeYgjXuPFVEDIylPzzlmANJdccCIO0H7ofXKbAKf0FWCkh8NkCFswe3Hpj6HegSTYH6SJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">This is the home page!</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>

                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>
                <div class="form-group">
                    <label for="message">Message</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>

                <hr>

                <input type="hidden" name="action" id="action">

                <div id="status" class="mt-2 float-end"></div>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

                <div id="output" class="chatbox mt-3"></div>
            </div>
            <div class="col-md-4">
                <h3>Who's Online</h3>

                <ul id="online_users"></ul>
            </div>
        </div>
    </div>
    
</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="/static/reconnecting-websocket.min.js"></script>
<script>
    let socket = null;
    let o = document.getElementById("output");
    let messageField = document.getElementById("message");
    let userField = document.getElementById("username");

    window.onbeforeunload = function() {
        console.log("leaving...")
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData));
        socket.send(JSON.stringify(jsonData));
    }

    document.addEventListener("DOMContentLoaded", function(){
        socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconectInterval: 3000})
        
        const offline = `<span class="badge bg-danger">Not connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`

        let statusDiv = document.getElementById("status");

        socket.onopen = () => {
            console.log("Successfully connected")
            statusDiv.innerHTML = online;
            let jsonData = {};
            jsonData["action"] = "users";
            // jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        }

        socket.onclose = () => {
            console.log("connection closed")
            statusDiv.innerHTML = offline;
        }

        socket.onerror = error => {
            console.log("there was an error")
            statusDiv.innerHTML = offline;
        }

        socket.onmessage = msg => {
            let data = JSON.parse(msg.data);
            console.log("Action is", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);
                    if (data.connected_users != null) {
                        if (data.connected_users.length > 0) {
                            data.connected_users.forEach(function(item){
                                let li = document.createElement("li");
                                li.appendChild(document.createTextNode(item));
                                ul.appendChild(li);
                            })
                        }
                    }
                    break;
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break;
            }

        }

        let userInput = userField;
        userInput.addEventListener("change", function() {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        messageField.addEventListener("keydown", function(event){
            if (event.code === "Enter") {
                if (!socket) {
                console.log("no connection");
                return false;
                }


            if (( userField.value === "") || (messageField.value === "")) {
                errorMessage ("fill out user and message");
                return false;
            }
            event.preventDefault();
            event.stopPropagation();
            sendMessage();
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function () {
            if (( userField.value === "") || (messageField.value === "")) {
                errorMessage ("fill out user and message");
                return false;
            } else {
                sendMessage();
            }
        })
    })

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = userField.value;
        jsonData["message"] = messageField.value;
        socket.send(JSON.stringify(jsonData));
        messageField.value = "";

    }

    function errorMessage(msg) {
        notie.alert({
            type: 'error',
            text: msg,
        })
    }
</script>
</html>